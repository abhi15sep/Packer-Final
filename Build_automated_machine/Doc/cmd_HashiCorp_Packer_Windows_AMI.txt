 folder win_ami
 
 windows_ami.json
 
 {
    "sensitive-variables":[
       "aws_access_key",
       "aws_secret_key",
       "winrm_username_env",
       "winrm_password_env"
    ],
    "builders":[
       {
          "type":"amazon-ebs",
          "access_key":"{{ user `aws_access_key` }}",
          "secret_key":"{{ user `aws_secret_key` }}",
          "region":"us-west-2",
          "instance_type":"t2.micro",
          "source_ami":"ami-0615111dcc6ceb40f",
          "ami_name":"windows-ami-packer",
          "winrm_username":"{{ user `winrm_username_env`}}",
          "user_data_file":"bootstrap_win.txt",
          "communicator":"winrm"
       }
    ],
    "provisioners":[
       {
          "type":"windows-restart"
       },
       {
          "script":"scripts.ps1",
          "type":"powershell"
       },
       {
          "type":"powershell",
          "environment_vars":[
             "WEBSERVER_WINDOWS_USERNAME={{ user `winrm_username_env`}}",
             "WEBSERVER_WINDOWS_PASSWORD={{ user `winrm_password_env`}}"
          ],
          "inline":[
             "net user $Env:WEBSERVER_WINDOWS_USERNAME $Env:WEBSERVER_WINDOWS_PASSWORD"
          ]
       }
    ]
 }
 
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 
 variables.json
 
 {
     "aws_access_key":"AKIATSBRNHEQTJN5JFUS",
     "aws_secret_key":"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",
     "winrm_username_env": "Administrator",
     "winrm_password_env": "s$cr$t123"
 }
 
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 bootstrap_win.txt
 
 <powershell>
 # First, make sure WinRM can't be connected to
 netsh advfirewall firewall set rule name="Windows Remote Management (HTTP-In)" new enable=yes action=block
 
 # Delete any existing WinRM listeners
 winrm delete winrm/config/listener?Address=*+Transport=HTTP  2>$Null
 winrm delete winrm/config/listener?Address=*+Transport=HTTPS 2>$Null
 
 # Disable group policies which block basic authentication and unencrypted login
 
 Set-ItemProperty -Path HKLM:\Software\Policies\Microsoft\Windows\WinRM\Client -Name AllowBasic -Value 1
 Set-ItemProperty -Path HKLM:\Software\Policies\Microsoft\Windows\WinRM\Client -Name AllowUnencryptedTraffic -Value 1
 Set-ItemProperty -Path HKLM:\Software\Policies\Microsoft\Windows\WinRM\Service -Name AllowBasic -Value 1
 Set-ItemProperty -Path HKLM:\Software\Policies\Microsoft\Windows\WinRM\Service -Name AllowUnencryptedTraffic -Value 1
 
 
 # Create a new WinRM listener and configure
 winrm create winrm/config/listener?Address=*+Transport=HTTP
 winrm set winrm/config/winrs '@{MaxMemoryPerShellMB="0"}'
 winrm set winrm/config '@{MaxTimeoutms="7200000"}'
 winrm set winrm/config/service '@{AllowUnencrypted="true"}'
 winrm set winrm/config/service '@{MaxConcurrentOperationsPerUser="12000"}'
 winrm set winrm/config/service/auth '@{Basic="true"}'
 winrm set winrm/config/client/auth '@{Basic="true"}'
 
 # Configure UAC to allow privilege elevation in remote shells
 $Key = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System'
 $Setting = 'LocalAccountTokenFilterPolicy'
 Set-ItemProperty -Path $Key -Name $Setting -Value 1 -Force
 
 # Configure and restart the WinRM Service; Enable the required firewall exception
 Stop-Service -Name WinRM
 Set-Service -Name WinRM -StartupType Automatic
 netsh advfirewall firewall set rule name="Windows Remote Management (HTTP-In)" new action=allow localip=any remoteip=any
 Start-Service -Name WinRM
 </powershell>
 
 
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 scripts.ps1
 
 Install-WindowsFeature -Name Web-Server, Web-Mgmt-Tools
 
 $folder = New-Item  C:\Sites\www.abcxyz.com  -ItemType directory
 $website = New-Website -Name "www.abcxyz.com" -HostHeader "www.abcxyz.com" -Port 80 -PhysicalPath$folder -force
 
 New-WebBinding $website.name -HostHeader "www.abcxyz.com" -Port 443 -Protocol "https" -SslFlags 1
 
 Start-WebSite -Name "www.abcxyz.com"
 
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 packer validate -var-file=variables.json windows_ami.json
 
 packer build -var-file=variables.json windows_ami.json
 
 
 
 
 
 PACKER_LOG=1 packer build -var-file variables.json windows_ami.json
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~